import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

public class Solution 
{
    static int count;
    public static void merge(ArrayList<Integer> arr,int i,int j){
        if(j>i){
            int mid=i+(j-i)/2;
            merge(arr,i,mid);
            merge(arr,mid+1,j);
            merging(arr,i,j,mid);
        }
    }
    public static void merging(ArrayList<Integer> arr,int s,int e,int mid){
        int i=s,j=mid+1;
        int[] temp=new int[e-s+1];
        int x=0;
        while(i<=mid && j<=e){
            if(arr.get(i)>(2*arr.get(j))){
                count+=(mid-i+1);
                j++;
            }
            else{
                i++;
            }
        }
        i=s;j=mid+1;
        while(i<=mid && j<=e){
            if(arr.get(i)>=arr.get(j)){
                temp[x]=arr.get(j);
                j++;
            }
            else{
                temp[x]=arr.get(i);
                i++;
            }
            x++;
        }
        if(i>mid){
            while(j<=e){
                temp[x]=arr.get(j);
                j++;
                x++;
            }
        }
        if(j>e){
            while(i<=mid){
                temp[x]=arr.get(i);
                i++;
                x++;
            }
        }
        int index=0;
        for(i=s ; i<=e ; i++){
            arr.set(i,temp[index]);
            index++;
        }
    }
    public static int reversePairs(ArrayList<Integer> arr) 
    {
        count=0;
        merge(arr,0,arr.size()-1);
        return count;  
    }
}
