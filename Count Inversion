import java.util.* ;
import java.io.*; 
public class Solution {
    static long count;
    public static void merge(long[] arr,int i,int j){
        if(j>i){
            int mid=i+(j-i)/2;
            merge(arr,i,mid);
            merge(arr,mid+1,j);
            merging(arr,i,j,mid);
        }
    }
    public static void merging(long[] arr,int s ,int e,int mid){
        int i=s,j=mid+1;
        long[] temp=new long[e-s+1];
        int x=0;
        while(i<=mid && j<=e){
            if(arr[i]>arr[j]){
                count+=(mid-i+1);
                //1 4 7 9    2 3 7 9
                temp[x]=arr[j];
                j++;
            }
            else{
                temp[x]=arr[i];
                i++;
            }
            x++;
        }
        if(i>mid){
            while(j<=e){
                temp[x]=arr[j];
                j++;
                x++;
            }
        }
        if(j>e){
            while(i<=mid){
                temp[x]=arr[i];
                i++;
                x++;
            }
        }
        int ind=0;
        for(int index=s ; index<=e ; index++){
            arr[index]=temp[ind];
            ind++;
        }
        
    }
    public static long getInversions(long arr[], int n) {
        // Write your code here.
        count=0;
        merge(arr,0,n-1);
        return count;
    }
}
//2 |5| 1 |3| 4 |6 |8


